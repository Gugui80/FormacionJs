INTRO
Javascript se ha convertido en un lenguaje idóneo y muy recomendable para aprender a todos los niveles, 
por disponer de muchas y variadas aplicaciones, además de aportar sencillez para las personas que comienzan. 
Para ejecutarlo necesitamos tan solo un navegador, aunque en la actualidad Javascript ha sobrepasado el ámbito de los 
clientes web, para situarse en casi cualquier parte.

Javascript se dedica a aportar funcionalidad e interacción, permitiendo disponer de interfaces de usuario dinámicas, 
respuesta a acciones del usuario, validación de formularios, etc.

USO
Usar Javascript para la web, en el entorno del navegador, también se conoce como programación del lado del cliente y 
es una de las actividades englobadas en el término "frontend". Hoy sigue siendo el ambiente más habitual de ejecución de 
Javascript, pero realmente es solo una más entre sus posibilidades. Nosotros en esta formación orientada a COFFEE-MRR
abordaremos el aprendizaje de JS en el lado del cliente, aunque su extensión al lado del servidor, o "backend" está
igualmente extendido, y cuenta con una ingente comunidad de desarrolladores y entusiastas.

Para utilizar JS del lado del servidor, nació NodeJS. Con él, podemos programar con Javascript aplicaciones que se 
ejecutan directamente sobre el sistema operativo y que son capaces de resolver cualquier tipo de problema. En el caso de
COFFEE-MRR lo utilizaremos para automatización, optimización y despliegue de aplicaciones.

JAVA Y JAVASCRIPT
Javascript se llamó así porque Netscape (el navegador que lanzó Javascript), que estaba aliado a los creadores de Java 
en la época (Sun Microsystems), quiso aprovechar la imagen de marca y la popularidad de Java, como maniobra para la 
expansión de su nuevo lenguaje. Con todo, se creó un producto que tenía ciertas similitudes, como la sintaxis del 
lenguaje o el nombre. Se hizo entender que era un hermano pequeño y orientado específicamente para hacer cosas en 
las páginas web, pero también se hizo caer a muchas personas en el error de pensar que son lo mismo. Diferencias:
1)Java es un lenguaje compilado y Javascript es un lenguaje interpretado por el navegador.
2)Java está orientado a objetos obligatoriamente, y JS lo permite (y fomenta) pero no obliga.
3)Tipado: Java es fuertemente tipado y JS es de tipado leve (una variable puede cambiar de tipo a lo largo de la ejecución
de la aplicación).
4)JavaScript es de código abierto y Java tiene propietario (Oracle).
5)La complejidad y ribustez de Java hacen que se necesite una formación mucho más intensa para iniciarse.

QUE NECESITO PARA TRABAJAR CON JAVASCRIPT?
Un editor (VSCode es el más potente y utilizado hoy en día) y un navegador. Además es necesario tenes conocimientos de HTML5
y CSS, así como de Programación Orientada a objetos para poder aprovechar todo el stack que Javascript nos brinda en la web.

OBJETIVO - SINGLE PAGE APLICATIONS
Conocidas también con sus siglas SPA, el servidor suele entregar solamente los datos de negocio en crudo y el navegador
hace todo el trabajo de presentar esos datos en un formato adecuado (en el navegador se produce el HTML para representar 
esos datos). Pero lo que más caracteriza a una SPA es que la navegación se realiza siempre dentro de la misma página y 
Javascript se encarga de presentar una u otra pantalla al usuario sin tener que recargar todo el conjunto de la página.

Los dos principales factores que caracterizan las SPA son los siguientes:

1)El hecho de traer del servidor los datos en crudo (más ligeros, con menor consumo de transferencia y mayor velocidad).
2)Toda la navegación se realiza dentro del mismo documento, producen aplicaciones web de una respuesta muy rápida, 
aportando una experiencia de uso cercana a la de una aplicación de escritorio.

ESTÁNDAR ECMASCript (ECMA = European Computer Manufacturers Association)
A medida que las exigencias de los desarrolladores han crecido en cuanto a la complejidad de las aplicaciones desarroldas
en JS, también ha tenido que realizarlo el propio lenguaje. Estas mejoras en el lenguaje las debemos al estándar ECMASCript:
ECMAScript es el estándar de definición del lenguaje Javascript, que cualquier cliente que soporte Javascript debe de soportar. 
A lo largo del tiempo se han ido publicando distintas versiones de ECMAScript, siendo la última más extendida ECMAScript 2015, 
también conocido por ES6.

UN POCO DE MAGIA RÁPIDA
<script> 
window.open("http://www.google.com","","width=550,height=420,menubar=no") 

window.alert("Bienvenido a mi sitio web. Gracias...") 
document.write(new Date())
<input type=button value=Atrás onclick="history.go(-1)">
</script>

CONSOLA DEL NAVEGADOR Y SUSU HERRAMIENTAS
Pulsa f12 y empieza :)

SINTAXIS DEL LENGUAJE
Hay 3 conceptos iniciales importantes que hay que conocer en javascript:
1)Js es caseSensitive, distingue entre mayúsculas y minúsculas en la declaración de nuestras variables y funciones.
2)Comentarios: Todo código precedido de //, ó encerrado entre /* */ será interpretado como comentario, nunca ejecutado.
3)Separación de instrucciones: En JavaScript, tanto el punto y coma ';' como el salto de línea son válidos para separar sentencias.

IMPORTANTE
A partir de este momento, el curso será estructurado en prácticas. Cada una de ellas esta contenida en un directorio que contiene:
Un archivo .txt que contiene la parte teórica de la práctica en cuestión.
Múltiples archivos .html, .css y .js que contendrán el código de los ejercicios propuestos.

El nexo de unión será el archivo .txt, que contiene la referencia a cada ejercicio relacionado con el epígrafe teórico, encerrado el nombre del ejercicio de esta forma => []

NOTA => La mayor parte de información ha sido obtenida de: https://desarrolloweb.com/manuales/manual-javascript.html
Podéis consultar más ejemplos en la misma página. 